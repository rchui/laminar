name: integration
on: [push]

jobs:
  test:
    name: ${{ matrix.os }} - python3.${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
        python-version: ['8', '9', '10', '11']
    env:
      PY_COLORS: '1'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-python@v4
        with:
          python-version: 3.${{ matrix.python-version }}
          architecture: x64

      - name: virtualenv
        run: make env

      - name: test
        run: make test

  build:
    name: build artifacts
    runs-on: ubuntu-latest
    needs: [test]
    env:
      PY_COLORS: '1'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: install
        run: make setup

      - name: build
        run: make build

      - name: check
        run: make check

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  promote:
    name: promote artifacts
    runs-on: ubuntu-latest
    needs: [build]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    env:
      PY_COLORS: '1'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: install
        run: make setup

      - name: check
        run: make check

      - name: tag
        run: make tag

      - name: promote
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
